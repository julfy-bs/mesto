(()=>{"use strict";var e,t,n=".form__button",r="popup_active",o=".form",c='[name="link"]',a="Сохранить",u="Сохранение...",s=".feed__item",i=".card__image",l=".card__like-button",d="card__like-button_active",f="card__like-button_liked_true",m=".card__delete",p=function(e){!function(e){e.classList.remove(r)}(e),function(e){e.removeEventListener("mousedown",h),e.removeEventListener("keydown",_)}(e)},v=function(e,t){p(e),e.querySelector(o).removeEventListener("submit",t),console.log("popup leave")},h=function(e){var t=e.target.closest(".popup"),n=e.target.classList.contains("popup")||e.target.classList.contains("popup__close"),r=null!==t.querySelector(o);n&&(r?v(t):p(t))},_=function(e){if("Escape"===e.key){var t=e.target.closest(".popup");null!==t.querySelector(o)?v(t):p(t)}},y=function(e){!function(e){e.classList.add(r)}(e),function(e){e.addEventListener("mousedown",h),e.addEventListener("keydown",_)}(e),setTimeout((function(){return e.focus()}),200)},b=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,r=e.querySelector(n);r.textContent=t},S=function(e,t){console.log("popup enter"),y(e),e.querySelector(o).addEventListener("submit",t)},E={baseUrl:"https://nomoreparties.co/v1/plus-cohort-19",headers:{authorization:"0f9e6763-ca59-4d6a-b788-b6c985602524","Content-Type":"application/json"}},L=function(e){return e.ok?e.json():Promise.reject("Ошибка!".concat(e.statusText," Код ошибки: ").concat(e.status,"."))},g=document.querySelector("#card").content.querySelector(s),q=document.querySelector(".feed__list"),T=document.querySelector(".popup_type_delete"),x=T.querySelector(o),k=document.querySelector(".popup_type_photo"),C=k.querySelector(".popup__image"),A=k.querySelector(".popup__figcaption"),w=[],D=null,U=function(e){e.classList.add(d),e.setAttribute("aria-label",'Убрать отметку "Понравилось"')},N=function(e){e.classList.remove(d),e.setAttribute("aria-label",'Добавить отметку "Понравилось"')},M=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;"number"!=typeof n&&console.error("Значение количества лайков карточки должно быть числом"),0===n?(e.classList.remove(f),t.textContent=""):(e.classList.add(f),t.textContent=n)},O=function(t,n){e=0!==t.length&&t.some((function(e){return e._id===n}))},H=function(t,n,r,o,c){var a,u=function(e){return w.find((function(t){return t._id===e}))}(r);switch(O(u.likes,c),e){case!0:(a=r,fetch("".concat(E.baseUrl,"/cards/likes/").concat(a),{method:"DELETE",headers:E.headers}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," удаления лайка карточки. ").concat(e.statusText))}))).then((function(e){O(e.likes,c),u.likes=e.likes})).catch((function(e){return console.error("Ошибка ".concat(e.status," удаления лайка карточки: ").concat(e.statusText))}));break;case!1:(function(e){return fetch("".concat(E.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:E.headers}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," добавления лайка карточки. ").concat(e.statusText))}))})(r).then((function(e){O(e.likes,c),u.likes=e.likes})).catch((function(e){return console.error("Ошибка ".concat(e.status," добавления лайка карточки: ").concat(e.statusText))}))}var s=Number(n.textContent),i=t.classList.contains(d);i?function(e,t,n){var r=n-1;"number"!=typeof n?console.error("Значение количества лайков карточки должно быть числом"):M(e,t,r)}(t,n,s):function(e,t,n){var r=n+1;"number"!=typeof n?console.error("Значение количества лайков карточки должно быть числом"):M(e,t,r)}(t,n,s),function(e,t){switch(t){case!0:N(e);break;case!1:U(e)}}(t,i)},I=function(e,t){y(k),A.textContent=t.textContent,C.setAttribute("src",e.getAttribute("src")),C.setAttribute("alt",e.getAttribute("alt"))},P=function(e,t){D=function(n){return j(n,e,t)},S(T,(function(n){return D(n,e,t)}))},j=function(e,t,n){e.preventDefault(),console.warn("TRYING TO DELETE",n),b(x);var r=t.closest(s),o=r.querySelector(i),c=r.querySelector(l),u=r.querySelector(m);(function(e){return fetch("".concat(E.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:E.headers}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," удаления карточки. ").concat(e.statusText))}))})(n).then((function(){return r.remove()})).catch((function(e){return console.error("Ошибка ".concat(e.status," удаления карточки: ").concat(e.statusText))})).finally((function(){var e,t;b(x,a),v(T,D),D=null,e=u,t=c,o.removeEventListener("mouseup",I),e.removeEventListener("mouseup",P),t.removeEventListener("mouseup",H)}))},G=function(t,n){var r,o,c=g.cloneNode(!0),a=c.querySelector(".card"),u=a.querySelector(i),s=a.querySelector(".card__title"),d=a.querySelector(".card__like-number"),f=a.querySelector(l),p=a.querySelector(m),v=t.likes.length>0?t.likes.length:0;return w.push(t),O(t.likes,n),r=s,o=t.name,r.textContent=o,function(e,t,n){e.setAttribute("src",n),e.setAttribute("alt",t)}(u,t.name,t.link),M(f,d,v),e?U(f):N(f),f.addEventListener("mouseup",(function(){return H(f,d,t._id,t.likes,n)})),u.addEventListener("mouseup",(function(){return I(u,s)})),t.owner._id===n?p.addEventListener("mouseup",(function(e){var n=e.target;return P(n,t._id)})):p.remove(),c},J=function(e){q.prepend(e)},V=document.querySelector(".popup_type_avatar"),B=document.querySelector(".profile__avatar"),Y=document.forms.avatar,z=Y.querySelector(c),R=document.querySelector(".popup_type_edit"),W=document.querySelector(".profile__name"),F=document.querySelector(".profile__image"),K=document.querySelector(".profile__occupation"),Q=document.querySelector(".profile__edit"),X=document.forms.profile,Z=X.querySelector('[name="name"]'),$=X.querySelector('[name="occupation"]'),ee=document.querySelector(".popup_type_add"),te=document.querySelector(".profile__add"),ne=document.forms.card,re=(ne.querySelector('[name="title"]'),ne.querySelector(c),function(e){F.setAttribute("src",e)}),oe=function(e){W.textContent=e},ce=function(e){K.textContent=e},ae=function e(t){var n,r,o;t.preventDefault(),b(X),oe(Z.value),ce($.value),(n={name:Z.value,about:$.value},r=n.name,o=n.about,fetch("".concat(E.baseUrl,"/users/me"),{method:"PATCH",headers:E.headers,body:JSON.stringify({name:r,about:o})}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," обновления информации пользователя. ").concat(e.statusText))}))).then((function(e){oe(e.name),ce(e.about)})).catch((function(e){return console.error("Ошибка ".concat(e.status," редактирования информации профиля: ").concat(e.statusText))})).finally((function(){X.reset(),b(X,a),v(R,(function(t){return e(t)}))}))},ue=function(){S(R,(function(e){return ae(e)})),Z.value=W.textContent,$.value=K.textContent},se=function(e,t,n){e.some((function(e){return!e.validity.valid}))?(t.classList.add(n),t.setAttribute("disabled","disabled")):(t.classList.remove(n),t.removeAttribute("disabled","disabled"))},ie=localStorage.getItem("userId")||null;if(te.addEventListener("mousedown",(function(){var e,t,n;(e={name:"test card",link:"https://images.unsplash.com/photo-1564858763975-d99de59ee4bb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1742&q=80"},t=e.name,n=e.link,fetch("".concat(E.baseUrl,"/cards"),{method:"POST",headers:E.headers,body:JSON.stringify({name:t,link:n})}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," добавления карточки. ").concat(e.statusText))}))).then((function(e){var t=G(e,e.owner._id);J(t)})).catch((function(e){console.error("Ошибка ".concat(e.status," cоздания карточки: ").concat(e.statusText))})).finally((function(){ne.reset(),b(ne,"Создать"),p(ee)}))})),Q.addEventListener("mousedown",(function(){return ue()})),B.addEventListener("mousedown",(function(){S(V,(function(e){return function(e){var t;e.preventDefault(),b(Y),(t=z.value,fetch("".concat(E.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:E.headers,body:JSON.stringify({avatar:t})}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," обновления аватара пользователя. ").concat(e.statusText))}))).then((function(e){re(e.avatar)})).catch((function(e){return console.error("Ошибка ".concat(e.status," изменения аватара пользователя: ").concat(e.statusText))})).finally((function(){Y.reset(),b(Y,a),p(V)}))}(e)}))})),t={formSelector:".form",inputSelector:".form__input",buttonSelector:n,errorSelector:".form__error",inputErrorClass:"form__input_type_error",buttonDisabledClass:"form__button_type_disabled",errorActiveClass:"form__error_active"},Array.from(document.querySelectorAll(t.formSelector)).forEach((function(e){return n=e,r=t.inputSelector,o=t.buttonSelector,c=t.errorSelector,a=t.inputErrorClass,u=t.buttonDisabledClass,s=t.errorActiveClass,i=Array.from(n.querySelectorAll(r)),l=n.querySelector(o),se(i,l,u),i.forEach((function(e){e.addEventListener("input",(function(){!function(e,t,n,r,o){var c=t.parentNode.querySelector(n);t.validity.patternMismatch?t.setCustomValidity(t.dataset.invalidMessage):t.setCustomValidity(""),t.validity.valid?function(e,t,n,r,o){n.classList.remove(o),n.textContent="",t.classList.remove(r),t.removeAttribute("aria-describedby")}(0,t,c,r,o):function(e,t,n,r,o,c){n.textContent=r,n.classList.add(c),t.classList.add(o),t.setAttribute("aria-describedby","".concat(c))}(0,t,c,t.validationMessage,r,o)}(0,e,c,a,s),se(i,l,u)}))})),void n.addEventListener("reset",(function(){setTimeout((function(){return se(i,l,u)}),0)}));var n,r,o,c,a,u,s,i,l})),document.addEventListener("DOMContentLoaded",(function(){fetch("".concat(E.baseUrl,"/users/me"),{headers:E.headers}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," получения информации о пользователе. ").concat(e.statusText))})).then((function(e){re(e.avatar),oe(e.name),ce(e.about),ie=e._id,localStorage.setItem("userId",ie)})),fetch("".concat(E.baseUrl,"/cards"),{headers:E.headers}).then((function(e){return L(e)})).catch((function(e){return console.error("Ошибка ".concat(e.status," получения информации о карточках. ").concat(e.statusText))})).then((function(e){e.reverse().forEach((function(e){var t=G(e,ie);J(t)}))}))})),null==EventTarget.prototype.original_addEventListener){function le(e,t,n){console.log("--- add event listener",this.nodeName,e),this.all_handlers=this.all_handlers||[],this.all_handlers.push({typ:e,fn:t,opt:n}),this.original_addEventListener(e,t,n)}EventTarget.prototype.original_addEventListener=EventTarget.prototype.addEventListener,EventTarget.prototype.addEventListener=le}if(null==EventTarget.prototype.original_removeEventListener){function de(e,t,n){console.log("--- remove event listener",this.nodeName,e),this.all_handlers=this.all_handlers||[],this.all_handlers.push({typ:e,fn:t,opt:n}),this.original_addEventListener(e,t,n)}EventTarget.prototype.original_removeEventListener=EventTarget.prototype.removeEventListener,EventTarget.prototype.removeEventListener=de}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,