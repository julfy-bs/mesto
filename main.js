(()=>{"use strict";var e={baseUrl:"https://nomoreparties.co/v1/plus-cohort-19",headers:{authorization:"0f9e6763-ca59-4d6a-b788-b6c985602524","Content-Type":"application/json"}},t="loader_active",r="loader__skeleton",n="loader__skeleton_type_text",o="submit",a="keydown",c="mousedown",i="click",s=".profile__name",u=".profile__occupation",l=".profile__avatar",d="popup_active",f='[name="link"]',m=".feed__item",v="card__like-button_active",p="card__like-button_liked_true",y=function(e){!function(e){e.classList.remove(d)}(e),function(e){e.removeEventListener(c,_),e.removeEventListener(a,b)}(e)},_=function(e){var t=e.target.closest(".popup");(e.target.classList.contains("popup")||e.target.classList.contains("popup__close"))&&y(t)},b=function(e){if("Escape"===e.key){var t=e.target.closest(".popup");y(t)}},h=function(e){!function(e){e.classList.add(d)}(e),function(e){e.addEventListener(c,_),e.addEventListener(a,b)}(e),setTimeout((function(){return e.focus()}),200)},S=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Сохранить",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Сохранение...";t.textContent=e?n:r},L=function(e,t){t.preventDefault();var r=t.target.closest(".popup"),n=t.submitter;S(!0,n),e().then((function(){t.target.reset(),y(r)})).finally((function(){return S(!1,n)}))},g=function(e){return e.ok?e.json():Promise.reject("Ошибка!".concat(e.statusText," Код ошибки: ").concat(e.status,"."))};function q(t,r){var n="".concat(e.baseUrl,"/").concat(t);return fetch(n,r).then(g)}const k={delete:function(){}};var A,E=document.querySelector("#card").content.querySelector(m),C=document.querySelector(".feed__list"),x=document.querySelector(".popup_type_delete"),T=document.querySelector(".popup_type_photo"),w=T.querySelector(".popup__image"),O=T.querySelector(".popup__figcaption"),j=[],I=function(e){e.classList.add(v),e.setAttribute("aria-label",'Убрать отметку "Понравилось"')},D=function(e){e.classList.remove(v),e.setAttribute("aria-label",'Добавить отметку "Понравилось"')},P=function(e,t){switch(t){case!0:D(e);break;case!1:I(e)}},M=function(e){return e.classList.contains(v)},N=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;"number"!=typeof r&&console.error("Значение количества лайков карточки должно быть числом"),0===r?(e.classList.remove(p),t.textContent=""):(e.classList.add(p),t.textContent=r)},U=function(e,t){A=0!==e.length&&e.some((function(e){return e._id===t}))},J=function(t,r){var n,o,a=E.cloneNode(!0),i=a.querySelector(".card"),s=i.querySelector(".card__image"),u=i.querySelector(".card__title"),l=i.querySelector(".card__like-number"),d=i.querySelector(".card__like-button"),f=i.querySelector(".card__delete"),v=t.likes.length>0?t.likes.length:0;return j.push(t),U(t.likes,r),n=u,o=t.name,n.textContent=o,function(e,t,r){e.setAttribute("src",r),e.setAttribute("alt",t)}(s,t.name,t.link),N(d,l,v),A?I(d):D(d),d.addEventListener(c,(function(){return function(t,r,n,o,a){var c,i=function(e){return j.find((function(t){return t._id===e}))}(n);switch(U(i.likes,a),t.setAttribute("disabled","disabled"),A){case!0:(c=n,q("cards/likes/".concat(c),{method:"DELETE",headers:e.headers})).then((function(e){U(e.likes,a),i.likes=e.likes,N(t,r,e.likes.length);var n=M(t);P(t,n)})).catch((function(e){return console.error("Ошибка ".concat(e.status," удаления лайка карточки: ").concat(e.statusText))})).finally((function(){return t.removeAttribute("disabled","disabled")}));break;case!1:(function(t){return q("cards/likes/".concat(t),{method:"PUT",headers:e.headers})})(n).then((function(e){U(e.likes,a),i.likes=e.likes,N(t,r,e.likes.length);var n=M(t);P(t,n)})).catch((function(e){return console.error("Ошибка ".concat(e.status," добавления лайка карточки: ").concat(e.statusText))})).finally((function(){return t.removeAttribute("disabled","disabled")}))}}(d,l,t._id,t.likes,r)})),s.addEventListener(c,(function(){return function(e,t){h(T),O.textContent=t.textContent,w.setAttribute("src",e.getAttribute("src")),w.setAttribute("alt",e.getAttribute("alt"))}(s,u)})),t.owner._id===r?f.addEventListener(c,(function(r){return function(t,r){k.delete=function(n){return function(t,r,n){var o=r.closest(m);L((function(){return function(t){return q("cards/".concat(t),{method:"DELETE",headers:e.headers})}(n).then((function(){return o.remove()})).catch((function(e){return console.error("Ошибка ".concat(e.status," редактирования информации профиля: ").concat(e.statusText))}))}),t)}(n,t,r)},h(x)}(r.target,t._id)})):f.remove(),a},H=function(e){C.prepend(e)},V=document.querySelector(".popup_type_avatar"),z=document.querySelector(l),$=document.forms.avatar,B=$.querySelector(f),F=document.querySelector(".popup_type_edit"),G=document.querySelector(s),K=document.querySelector(".profile__image"),Q=document.querySelector(u),R=document.querySelector(".profile__edit"),W=document.forms.profile,X=W.querySelector('[name="name"]'),Y=W.querySelector('[name="occupation"]'),Z=document.querySelector(".popup_type_add"),ee=document.querySelector(".profile__add"),te=document.forms.card,re=te.querySelector('[name="title"]'),ne=te.querySelector(f),oe=function(e){K.setAttribute("src",e)},ae=function(e){G.textContent=e},ce=function(e){Q.textContent=e},ie=function(e,t,r){e.some((function(e){return!e.validity.valid}))?(t.classList.add(r),t.setAttribute("disabled","disabled")):(t.classList.remove(r),t.removeAttribute("disabled","disabled"))},se=document.querySelector(".loader"),ue=document.querySelector(s),le=document.querySelector(l),de=document.querySelector(u);function fe(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var me,ve=document.forms.delete,pe=localStorage.getItem("userId")||null;ee.addEventListener(i,(function(){h(Z)})),te.addEventListener(o,(function(t){L((function(){var t,r,n;return(t={name:re.value,link:ne.value},r=t.name,n=t.link,q("cards",{method:"POST",headers:e.headers,body:JSON.stringify({name:r,link:n})})).then((function(e){var t=J(e,e.owner._id);H(t)})).catch((function(e){return console.error("Ошибка ".concat(e.status," cоздания карточки: ").concat(e.statusText))}))}),t)})),R.addEventListener(i,(function(){h(F),X.value=G.textContent,Y.value=Q.textContent})),W.addEventListener(o,(function(t){var r={name:X.value,about:Y.value};L((function(){return(t=r,n=t.name,o=t.about,q("users/me",{method:"PATCH",headers:e.headers,body:JSON.stringify({name:n,about:o})})).then((function(e){ae(e.name),ce(e.about)})).catch((function(e){return console.error("Ошибка ".concat(e.status," редактирования информации профиля: ").concat(e.statusText))}));var t,n,o}),t)})),z.addEventListener(i,(function(){h(V)})),$.addEventListener(o,(function(t){L((function(){return(t=B.value,q("users/me/avatar",{method:"PATCH",headers:e.headers,body:JSON.stringify({avatar:t})})).then((function(e){oe(e.avatar)})).catch((function(e){return console.error("Ошибка ".concat(e.status," изменения аватара пользователя: ").concat(e.statusText))}));var t}),t)})),ve.addEventListener(o,(function(e){return k.delete(e)})),me={formSelector:".form",inputSelector:".form__input",buttonSelector:".form__button",errorSelector:".form__error",inputErrorClass:"form__input_type_error",buttonDisabledClass:"form__button_type_disabled",errorActiveClass:"form__error_active"},Array.from(document.querySelectorAll(me.formSelector)).forEach((function(e){return t=e,r=me.inputSelector,n=me.buttonSelector,o=me.errorSelector,a=me.inputErrorClass,c=me.buttonDisabledClass,i=me.errorActiveClass,s=Array.from(t.querySelectorAll(r)),u=t.querySelector(n),ie(s,u,c),s.forEach((function(e){e.addEventListener("input",(function(){!function(e,t,r,n,o){var a=t.parentNode.querySelector(r);t.validity.patternMismatch?t.setCustomValidity(t.dataset.invalidMessage):t.setCustomValidity(""),t.validity.valid?function(e,t,r,n,o){r.classList.remove(o),r.textContent="",t.classList.remove(n),t.removeAttribute("aria-describedby")}(0,t,a,n,o):function(e,t,r,n,o,a){r.textContent=n,r.classList.add(a),t.classList.add(o),t.setAttribute("aria-describedby","".concat(a))}(0,t,a,t.validationMessage,n,o)}(0,e,o,a,i),ie(s,u,c)}))})),void t.addEventListener("reset",(function(){setTimeout((function(){return ie(s,u,c)}),0)}));var t,r,n,o,a,c,i,s,u})),document.addEventListener("DOMContentLoaded",(function(){se.classList.add(t),ue.classList.add(r),ue.classList.add(n),le.classList.add(r),de.classList.add(r),de.classList.add(n),Promise.all([q("users/me",{headers:e.headers}),q("cards",{headers:e.headers})]).then((function(e){var o,a,c=(a=2,function(e){if(Array.isArray(e))return e}(o=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a,c,i=[],s=!0,u=!1;try{if(a=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;s=!1}else for(;!(s=(n=a.call(r)).done)&&(i.push(n.value),i.length!==t);s=!0);}catch(e){u=!0,o=e}finally{try{if(!s&&null!=r.return&&(c=r.return(),Object(c)!==c))return}finally{if(u)throw o}}return i}}(o,a)||function(e,t){if(e){if("string"==typeof e)return fe(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?fe(e,t):void 0}}(o,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=c[0],s=c[1];oe(i.avatar),ae(i.name),ce(i.about),pe=i._id,localStorage.setItem("userId",pe),s.reverse().forEach((function(e){var t=J(e,pe);H(t)})),se.classList.remove(t),ue.classList.remove(r),ue.classList.remove(n),le.classList.remove(r),de.classList.remove(r),de.classList.remove(n)})).catch((function(e){return console.error("Ошибка ".concat(e.status," получения информации о пользователе. ").concat(e.statusText))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,